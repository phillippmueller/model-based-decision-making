#Save the results
save_results([experiments, outcomes], 'results/10000Scenarios_RandomPolicy_PF6.tar.gz')
# load the worst case results for further analysis 
random_experiments, random_outcomes = load_results('results/10000Scenarios_RandomPolicy_PF6.tar.gz')


random_outcomes = pd.DataFrame([random_outcomes['A3 Expected Annual Damage'],random_outcomes['A3 Aggr Expected Number of Deaths']]).transpose()
random_outcomes = random_outcomes.rename(index={0:'Expected Annual Damage', 1:'Expected Number of Deaths'})

#put outcomes from null_policy into similar format
outcomes = pd.DataFrame([outcomes['A3 Expected Annual Damage'],outcomes['A3 Aggr Expected Number of Deaths']] )
outcomes = outcomes.rename(index={0:'Expected Annual Damage', 1:'Expected Number of Deaths'})







#random_experiments, random_outcomes = pd.DataFrame(random_experiments), pd.DataFrame(random_outcomes)

from scipy.stats import normaltest, mannwhitneyu, ttest_ind

for col in outcomes.columns: 
    #statistic, p_value = normaltest(outcomes[col])
    print(outcomes.columns)
    #print(f'normaltest for {col} and: p-value = {p_value}')
    

for col in random_outcomes.columns:
    statistic, p_value = normaltest(random_outcomes[col])
    print(f'normaltest for {col} and: p-value = {p_value}')





    for col_random in random_outcomes.index:
    for col_outcomes in outcomes.index:
        statistic, p_value = ttest_ind(random_outcomes[col_random], outcomes[col_outcomes])
        print(f"T-test between {col_random} and {col_outcomes}: p-value = {p_value}")


# repeat for manwhitneyu






import seaborn as sns
import matplotlib.pyplot as plt

# Example data
data1 = [1, 2, 3, 4, 5]
data2 = [3, 4, 5, 6, 7]

# Create a figure and axes
fig, axes = plt.subplots(1, 2, figsize=(10, 5))

# Create the first boxplot on the left
sns.boxplot(data=data1, ax=axes[0])
axes[0].set_title('Boxplot 1')

# Create the second boxplot on the right
sns.boxplot(data=data2, ax=axes[1])
axes[1].set_title('Boxplot 2')

# Set the spacing between the subplots
plt.tight_layout()

# Show the plot
plt.show()
